{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; //write a custom hook (function)\n\nconst useForm = validation => {\n  _s();\n\n  //where do i need submit and validation functions?\n  const [values, setValues] = useState({\n    //declare a hook\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState({}); //declare another hook\n\n  const [logged, setLogged] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      //important.spread all the fields(copy the whole object),then overwrite the name field.otherwise it will only display name.\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    //we need to build API to pass it to the server side.\n    e.preventDefault();\n    setError(validation(values)); //update error\n\n    console.log(values);\n    axios.post('http://localhost:8080/api/user/register', values).then(response => {\n      console.log(response);\n      setLogged(true);\n    }).catch(error => {\n      console.log(error);\n    }); //window.location to redirect to another page \n    //clear all the input field\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    error,\n    logged\n  };\n};\n\n_s(useForm, \"oDdLZy4xkLaIlcTMZi/oJh2c/eI=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/stephanie/Desktop/programming/full-auth/auth-frontend/src/useForm.js"],"names":["React","useState","useEffect","axios","useForm","validation","values","setValues","name","email","password","error","setError","logged","setLogged","handleChange","e","value","target","handleSubmit","preventDefault","console","log","post","then","response","catch"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,MAAMC,OAAO,GAAEC,UAAD,IAAc;AAAA;;AACxB;AACA,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBN,QAAQ,CAAC;AAAE;AAChCO,IAAAA,IAAI,EAAC,EADyB;AAE9BC,IAAAA,KAAK,EAAC,EAFwB;AAG9BC,IAAAA,QAAQ,EAAC;AAHqB,GAAD,CAAjC;AAKA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBX,QAAQ,CAAC,EAAD,CAA/B,CAPwB,CAOW;;AACnC,QAAM,CAACY,MAAD,EAASC,SAAT,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMc,YAAY,GAACC,CAAC,IAAE;AACnB,UAAM;AAACR,MAAAA,IAAD;AAAOS,MAAAA;AAAP,QAAcD,CAAC,CAACE,MAAtB;AACCX,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AACI;AACV,OAACE,IAAD,GAAOS;AAFD,KAAD,CAAT;AAIH,GAND;;AAOA,QAAME,YAAY,GAACH,CAAC,IAAE;AAAC;AACnBA,IAAAA,CAAC,CAACI,cAAF;AACAR,IAAAA,QAAQ,CAACP,UAAU,CAACC,MAAD,CAAX,CAAR,CAFkB,CAEU;;AAC5Be,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACAH,IAAAA,KAAK,CAACoB,IAAN,CAAW,yCAAX,EAAqDjB,MAArD,EACCkB,IADD,CACOC,QAAD,IAAY;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAX,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAJD,EAIGY,KAJH,CAIUf,KAAD,IAAS;AACdU,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACH,KAND,EAJkB,CAWlB;AACA;AACF,GAbF;;AAcC,SAAO;AACHI,IAAAA,YADG;AAEHI,IAAAA,YAFG;AAGHb,IAAAA,MAHG;AAIHK,IAAAA,KAJG;AAKHE,IAAAA;AALG,GAAP;AAOJ,CArCD;;GAAMT,O;;AAsCN,eAAeA,OAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport axios from 'axios';\n//write a custom hook (function)\nconst useForm=(validation)=>{\n    //where do i need submit and validation functions?\n    const [values,setValues]=useState({ //declare a hook\n        name:'',\n        email:'',\n        password:''\n    });\n    const [error,setError]=useState({})//declare another hook\n    const [logged, setLogged]=useState(false);\n    const handleChange=e=>{\n       const {name, value}=e.target;\n        setValues({ \n            ...values,//important.spread all the fields(copy the whole object),then overwrite the name field.otherwise it will only display name.\n            [name]:value\n        })\n    }\n    const handleSubmit=e=>{//we need to build API to pass it to the server side.\n        e.preventDefault();\n        setError(validation(values))//update error\n        console.log(values);\n        axios.post('http://localhost:8080/api/user/register',values)\n        .then((response)=>{\n            console.log(response);\n            setLogged(true);\n        }).catch((error)=>{\n            console.log(error);\n        })\n        //window.location to redirect to another page \n        //clear all the input field\n     }\n     return {\n         handleChange,\n         handleSubmit,\n         values,\n         error,\n         logged\n     }\n}\nexport default useForm;"]},"metadata":{},"sourceType":"module"}